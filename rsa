#!/usr/bin/python3

import sys
import math
import random

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    f = lambda x: (x ** 2 + c) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize_number(n):
    factors = []
    while n > 1:
        factor = pollards_rho(n)
        factors.append(factor)
        n //= factor
    return factors

def factorize_file(file_path):
    with open(file_path, 'r') as file:
        for line in file:
            line = line.strip()
            if not line.isdigit():
                continue  # Skip non-numeric lines
            number = int(line)
            factors = factorize_number(number)
            if len(factors) == 2:
                print(f"{number}={factors[0]}*{factors[1]}")
            else:
                print(f"Unable to factorize {number} into two prime numbers.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)

    file_path = sys.argv[1]
    factorize_file(file_path)
